What happens when you initialize a repository? Why do you need to do it?
+ you create a new rep where the files are located
+ you add the git subfolder to the wished rep
+ just simply type git init 

How is the staging area different from the working directory and the repository?
What value do you think it offers?
+preparation stage
+between working dir and repository

How can you use the staging area to make sure you have one commit per logical
change?
+ by adding a file to stage area and overwriting it (iteration possible)
+ command is git add 

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?
+ try out new feature
+ expriments 

How do the diagrams help you visualize the branch structure?
+ clear understanding of the infrastructure 

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?
+ to get an overview what is done
+ to see the parents and the accessible commits
+ commits can be lost (detached heads)

What are the pros and cons of Git's automatic merging vs. always doing merges
manually?
+pros: it commits a branch and a head into a new head automatically
+pros: it provides a new head and lists the conflicts 
-cons: the conflict have to be removed on its own, tedios work
cmd: git merge branch (be on the branch incl master you want to execute merge)